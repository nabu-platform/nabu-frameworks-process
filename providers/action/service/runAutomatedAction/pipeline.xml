<structure name="pipeline">
    <structure name="input">
        <field minOccurs="0" name="connectionId" type="java.lang.String"/>
        <field name="processVersionId" pattern="[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}|[0-9a-fA-F]{32}" type="java.util.UUID"/>
        <field name="processInstanceId" pattern="[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}|[0-9a-fA-F]{32}" type="java.util.UUID"/>
        <field name="processStateInstanceId" pattern="[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}|[0-9a-fA-F]{32}" type="java.util.UUID"/>
        <field name="actionId" pattern="[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}|[0-9a-fA-F]{32}" type="java.util.UUID"/>
        <field maxOccurs="unbounded" minOccurs="0" name="activateRelationIds" pattern="[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}|[0-9a-fA-F]{32}" primaryKey="true" type="java.util.UUID"/>
        <structure definition="nabu.frameworks.process.providers.action.service.utils.activatedRelation" maxOccurs="unbounded" minOccurs="0" name="activatedRelations"/>
        <structure definition="nabu.frameworks.process.providers.action.service.utils.propertyList" minOccurs="0" name="binding"/>
        <field comment="When run synchronously, we don't need to double check whether or not we can be run" minOccurs="0" name="synchronous" type="java.lang.Boolean"/>
        <field minOccurs="0" name="contextId" type="java.lang.String"/>
        <field minOccurs="0" name="defaultTransactionId" type="java.lang.String"/>
        <field minOccurs="0" name="bestEffort" type="java.lang.Boolean"/>
        <field comment="Purely informative to whoever is reading the task input" minOccurs="0" name="serviceId" type="java.lang.String"/>
    </structure>
    <structure name="output"/>
    <field name="allowedToProceed" type="java.lang.Boolean"/>
    <field name="processInError" type="java.lang.Boolean"/>
    <structure collectionName="processActions" comment="When you have a repeatable action that has child actions, when the child actions occur, they are linked to the LAST unlockedinstance of the parent.&#10;For example: check a particular remote state (e.g. document signature) until it is signed, then we can continue." definition="nabu.frameworks.process.database.types.processAction" minOccurs="0" name="action"/>
    <structure collectionName="teamsTemplates" definition="java.lang.Object" minOccurs="0" name="serviceInput"/>
    <structure definition="nabu.frameworks.process.providers.action.service.utils.processVersionFull" name="definition"/>
    <field name="taskId" pattern="[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}|[0-9a-fA-F]{32}" type="java.util.UUID"/>
    <structure collectionName="processActionInstances" definition="nabu.frameworks.process.crud.processActionInstance.types.output" enricher="nabu.frameworks.process.crud.processActionInstance.services.list" maxOccurs="unbounded" minOccurs="0" name="actionInstancesInError" persister="nabu.frameworks.process.crud.processActionInstance.batch.updateAll"/>
    <field name="amountOfActionInstancesInError" nillable="false" type="java.lang.Long"/>
    <structure collectionName="processInstances" definition="nabu.frameworks.process.crud.processInstance.types.output" enricher="nabu.frameworks.process.crud.processInstance.services.list" name="processInstance" persister="nabu.frameworks.process.crud.processInstance.batch.updateAll"/>
    <field comment="You can define a shared queue. Otherwise each process will have its own (anonymous) queue." minOccurs="0" name="queue" type="java.lang.String"/>
    <field minOccurs="0" name="actionInput" type="java.lang.String"/>
    <field name="nested" type="java.lang.Boolean"/>
    <structure collectionName="processActionInstances" definition="nabu.frameworks.process.crud.processActionInstance.types.createOutput" name="processActionInstance"/>
    <field minOccurs="0" name="scheduled" type="java.util.Date"/>
</structure>
