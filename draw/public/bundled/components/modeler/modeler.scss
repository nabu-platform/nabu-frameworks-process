.process-state-name {
	fill: black;
}
.process-state-rect, .process-action-rect {
	border-radius: 10px;
	stroke: #ccc;
	stroke-width:1;
	cursor: pointer;
}
.process-state-rect {
	rx: 10px;
	ry: 10px;
}
text {
	pointer-events: none;
}
.draggable {
	cursor: pointer;
}

.resizer {
	stroke-width: 1;
	cursor: pointer;
}
.mapper {
	cursor: pointer;
}
.automatic {
	stroke-width: 2;
	stroke-dasharray: 10 0 10 0 10;
	&.synchronous {
		/*stroke-dasharray: 4;*/
	}
}

.drop-highlight {
	stroke-width: 4 !important;
}

.process-state:not(.selected) .process-state-rect {
	stroke-width: 2;
}
.process-state.selected .process-state-rect {
	stroke-width: 4;
}

.process-action:not(.selected) .process-action-rect {
	stroke-width: 2;
}
.process-action.selected .process-action-rect {
	stroke-width: 4;
}

.selected > .selectable {
	stroke-width: 4;
}

.reference text, .timeout text {
	font-family: Monospace;
	font-weight: bold;
}

.process-action-name, .process-state-name {
	font-weight: bold;
}

.process-action.optional rect {
	stroke-dasharray: 3;
}

.relation.type-not {
	stroke: #f7a0a0;
	stroke-dasharray: 3;
}
.relation.type-flow-stop {
	stroke-dasharray: 3 1 3;
}
.relation.type-flow-start {
	stroke-dasharray: 3;
}
.relation.type-flow-failed {
	stroke: #f7a0a0;
}
.finalizer, .any, .all {
	stroke-width: 2;
}

.any {
	stroke-dasharray: 3;
}

defs path {
	fill: inherit !important;
	stroke: inherit !important;
	stroke-width: 2px !important;
}

.process-modeler-form {
	position: fixed;
	max-height: 100%;
	overflow: auto;
	right:0;
	.mouse-mode {
		.is-icon {
			display: none;
		}
		input {
			max-width: 7rem;
			width: 100% !important;
			border-top-right-radius: 0;
			border-bottom-right-radius: 0;
		}
	}
}